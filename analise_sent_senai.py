# -*- coding: utf-8 -*-
"""Analise_sent_senai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cIqp8FMts6EkZAZCuGI97i8pFok_egIk
"""

import pandas as pd
import numpy as np
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression

tweets=[]
sentimentos=[]

#Tweet Aleatorio
palavras_pos=['maravilhoso','incrivel','adoro','recomendo', 'perfeito']
palavras_neg=['ruim','horrivel','descepcionante', 'nao recomendo','pessimo']
palavras_neu=['bom','legal','ok','interessante', 'informativo']

#Tweet positivo, input palavra para a classificação possitiva

for _ in range(100):
  tweet_poss=random.choice(palavras_pos)+ '' + random.choice(palavras_pos)
  tweets.append(tweet_poss)
  sentimentos.append(2)
  #Tweet neutro, input palavra para a classificação neutra
  tweet_neu=random.choice(palavras_neu)+ '' + random.choice(palavras_neu)
  tweets.append(tweet_neu)
  sentimentos.append(1)
  #Tweet negativo, input palavra para a classificação negativa
  tweet_neg=random.choice(palavras_neg)+ '' + random.choice(palavras_neg)
  tweets.append(tweet_neg)
  sentimentos.append(0)

#Criando Data Frame
dados_tweet=pd.DataFrame({
    'tweets':tweets,
    'sentimentos':sentimentos
})

dados_tweet.to_csv('dados_tweets.csv',index=False)

dados_tweet=pd.read_csv('dados_tweets.csv')

dados_tweet.head()

#Separaçao tweets e rotulos
tweets=dados_tweet['tweets']
rotulos=dados_tweet['sentimentos']

#Conversão dos tweets em vetores
vectorizer=TfidfVectorizer()
tweets_vetorizados=vectorizer.fit_transform(tweets)

X_treino, X_teste, y_treino, y_teste = train_test_split(tweets_vetorizados,rotulos,test_size=0.2, random_state=42)

#Equalização (Treino)NaivesBayes
modelo=MultinomialNB()
modelo.fit(X_treino,y_treino)

#Classificação dos novos tweets (Predição)
tweet_novo='Amei o novo produto da marca!#maravilhoso'
vetor_novo=vectorizer.transform([tweet_novo])
sentimento_predito=modelo.predict(vetor_novo)
print('O sentimento do novo tweet é:', sentimento_predito[0])

acuracia=modelo.score(X_teste,y_teste)
print('Acuracia do modelo é:', acuracia)